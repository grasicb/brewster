#include "Adafruit_ILI9341.h"
#include "Adafruit_mfGFX.h"
#include "TemperatureScreen.h"
#include "PietteTech_DHT.h"
#include "XPT2046.h"

#define TFT_GRID

//Globals

TemperatureScreen tempScreen = TemperatureScreen();

SYSTEM_MODE(SEMI_AUTOMATIC);
PietteTech_DHT dhtSensor(6, DHT22);

XPT2046 ts(D3, D4);

void setup() {
	//LCD Setup
	Serial.begin(9600);
	Serial.println("Adafruit 2.2\" SPI TFT Test! _m1");

	tempScreen.showLoadingScreen();

	//Init Touch sensor
	ts.begin(1600, 1600);

	//Connect to Cloud
	Particle.connect();
	waitFor(Particle.connected, 30000);
	Time.zone(1);

  //Setup done
	tempScreen.initScreen();
	Serial.println("Done!");
}

void loop(void) {
	String time = Time.format(Time.now(), "%H:%M:%S");
	float humidity;
	float temp1;
	getDhtSensorData(humidity, temp1);

	tempScreen.displayData(humidity, temp1, 22.01);

	if (ts.isTouching()) {
		Serial.print("Touched: ");

		uint16_t x,y;
		ts.getPosition(x, y, ts.MODE_DFR, 1);
		//ts.getRaw(x, y, ts.MODE_DFR, 1);
		Serial.print("x = ");
		Serial.print(x);
		Serial.print(", y = ");
		Serial.println(y);
  }


	// MODE_DFR
/*
	TS_Point p = ts.getPoint();
  Serial.print("x = ");
  Serial.print(p.x);
  Serial.print(", y = ");
  Serial.println(p.y);
*/
}

void getDhtSensorData(float &humidity, float &temp) {
	dhtSensor.acquire();
	while (dhtSensor.acquiring());

	int result = dhtSensor.getStatus();

  if (result != DHTLIB_OK) {
		Serial.println("Error while reading DHT sensor");
	  switch (result) {
	      case DHTLIB_ERROR_CHECKSUM:
	          Serial.println("Error\n\r\tChecksum error");
	          break;
	      case DHTLIB_ERROR_ISR_TIMEOUT:
	          Serial.println("Error\n\r\tISR time out error");
	          break;
	      case DHTLIB_ERROR_RESPONSE_TIMEOUT:
	          Serial.println("Error\n\r\tResponse time out error");
	          break;
	      case DHTLIB_ERROR_DATA_TIMEOUT:
	          Serial.println("Error\n\r\tData time out error");
	          break;
	      case DHTLIB_ERROR_ACQUIRING:
	          Serial.println("Error\n\r\tAcquiring");
	          break;
	      case DHTLIB_ERROR_DELTA:
	          Serial.println("Error\n\r\tDelta time to small");
	          break;
	      case DHTLIB_ERROR_NOTSTARTED:
	          Serial.println("Error\n\r\tNot started");
	          break;
	      default:
	          Serial.println("Unknown error");
	          break;
	  }
	}else{
		humidity = dhtSensor.getHumidity();
		temp = dhtSensor.getCelsius();
	}
}
